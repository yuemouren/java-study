<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ujiuye.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.ujiuye.bean.Employee">
        <id column="eid" property="eid" jdbcType="INTEGER"/>
        <result column="ename" property="ename" jdbcType="VARCHAR"/>
        <result column="esex" property="esex" jdbcType="VARCHAR"/>
        <result column="eage" property="eage" jdbcType="INTEGER"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="hiredate" property="hiredate" jdbcType="DATE"/>
        <result column="pnum" property="pnum" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="p_fk" property="pFk" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        eid, ename, esex, eage, telephone, hiredate, pnum, username, password, remark, p_fk
    </sql>
    <select id="selectByExample" resultMap="newMap" parameterType="com.ujiuye.bean.EmployeeExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where eid = #{eid,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where eid = #{eid,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ujiuye.bean.EmployeeExample">
        delete from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ujiuye.bean.Employee">
        <selectKey keyColumn="eid" keyProperty="eid" resultType="int" order="AFTER">
            select last_insert_id()
        </selectKey>
        insert into employee (eid, ename, esex,
        eage, telephone, hiredate,
        pnum, username, password,
        remark, p_fk)
        values (#{eid,jdbcType=INTEGER}, #{ename,jdbcType=VARCHAR}, #{esex,jdbcType=VARCHAR},
        #{eage,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, #{hiredate,jdbcType=DATE},
        #{pnum,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{pFk,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.ujiuye.bean.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="eid != null">
                eid,
            </if>
            <if test="ename != null">
                ename,
            </if>
            <if test="esex != null">
                esex,
            </if>
            <if test="eage != null">
                eage,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
            <if test="hiredate != null">
                hiredate,
            </if>
            <if test="pnum != null">
                pnum,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="pFk != null">
                p_fk,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="eid != null">
                #{eid,jdbcType=INTEGER},
            </if>
            <if test="ename != null">
                #{ename,jdbcType=VARCHAR},
            </if>
            <if test="esex != null">
                #{esex,jdbcType=VARCHAR},
            </if>
            <if test="eage != null">
                #{eage,jdbcType=INTEGER},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="hiredate != null">
                #{hiredate,jdbcType=DATE},
            </if>
            <if test="pnum != null">
                #{pnum,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="pFk != null">
                #{pFk,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ujiuye.bean.EmployeeExample" resultType="java.lang.Integer">
        select count(*) from employee
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update employee
        <set>
            <if test="record.eid != null">
                eid = #{record.eid,jdbcType=INTEGER},
            </if>
            <if test="record.ename != null">
                ename = #{record.ename,jdbcType=VARCHAR},
            </if>
            <if test="record.esex != null">
                esex = #{record.esex,jdbcType=VARCHAR},
            </if>
            <if test="record.eage != null">
                eage = #{record.eage,jdbcType=INTEGER},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
            <if test="record.hiredate != null">
                hiredate = #{record.hiredate,jdbcType=DATE},
            </if>
            <if test="record.pnum != null">
                pnum = #{record.pnum,jdbcType=VARCHAR},
            </if>
            <if test="record.username != null">
                username = #{record.username,jdbcType=VARCHAR},
            </if>
            <if test="record.password != null">
                password = #{record.password,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null">
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.pFk != null">
                p_fk = #{record.pFk,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update employee
        set eid = #{record.eid,jdbcType=INTEGER},
        ename = #{record.ename,jdbcType=VARCHAR},
        esex = #{record.esex,jdbcType=VARCHAR},
        eage = #{record.eage,jdbcType=INTEGER},
        telephone = #{record.telephone,jdbcType=VARCHAR},
        hiredate = #{record.hiredate,jdbcType=DATE},
        pnum = #{record.pnum,jdbcType=VARCHAR},
        username = #{record.username,jdbcType=VARCHAR},
        password = #{record.password,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        p_fk = #{record.pFk,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ujiuye.bean.Employee">
        update employee
        <set>
            <if test="ename != null">
                ename = #{ename,jdbcType=VARCHAR},
            </if>
            <if test="esex != null">
                esex = #{esex,jdbcType=VARCHAR},
            </if>
            <if test="eage != null">
                eage = #{eage,jdbcType=INTEGER},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="hiredate != null">
                hiredate = #{hiredate,jdbcType=DATE},
            </if>
            <if test="pnum != null">
                pnum = #{pnum,jdbcType=VARCHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="pFk != null">
                p_fk = #{pFk,jdbcType=INTEGER},
            </if>
        </set>
        where eid = #{eid,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ujiuye.bean.Employee">
        update employee
        set ename = #{ename,jdbcType=VARCHAR},
        esex = #{esex,jdbcType=VARCHAR},
        eage = #{eage,jdbcType=INTEGER},
        telephone = #{telephone,jdbcType=VARCHAR},
        hiredate = #{hiredate,jdbcType=DATE},
        pnum = #{pnum,jdbcType=VARCHAR},
        username = #{username,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        p_fk = #{pFk,jdbcType=INTEGER}
        where eid = #{eid,jdbcType=INTEGER}
    </update>

    <resultMap id="newMap" type="Employee" extends="BaseResultMap">
        <association property="position" column="p_fk" javaType="Position"
                     select="com.ujiuye.mapper.PositionMapper.selectByPrimaryKey"></association>
    </resultMap>

    <select id="getAllEmployee" resultMap="newMap">
        select <include refid="Base_Column_List"></include> from employee
    </select>

    <select id="login" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"></include> from employee where username=#{username} and
        password=#{password}
    </select>

</mapper>